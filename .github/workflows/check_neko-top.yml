# This check is used to ensure documentation can be built from the main branch.
name: Check Compilation and Run Tests

on:
  # This workflow is only defined here. It is triggered from other workflows.
  workflow_call:

  # Allow debugging the CI/CD pipeline by running the workflow on push events
  # targeting the `cicd/develop` branch.
  push:
    branches: [cicd/develop]

jobs:
  pfunit:
    name: Setup and cache pFUnit library
    runs-on: ubuntu-latest

    outputs:
      install-dir: ${{ steps.setup-pfunit.outputs.install-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get system cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: openmpi-bin
          version: 1.0

      - name: Setup system
        run: |
          sudo apt-get install libopenmpi-dev

      - name: Setup pFUnit
        id: setup-pfunit
        uses: ./.github/actions/setup_pfunit

  json-fortran:
    name: Setup and cache json-fortran library
    runs-on: ubuntu-latest

    outputs:
      install-dir: ${{ steps.setup-json-fortran.outputs.install-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup json-fortran
        id: setup-json-fortran
        uses: ./.github/actions/setup_json-fortran

  neko:
    name: Setup and cache Neko library
    runs-on: ubuntu-latest
    needs:
      - json-fortran

    outputs:
      install-dir: ${{ steps.setup-neko.outputs.install-dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get system cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: autotools-dev automake autoconf openmpi-bin pkg-config libopenblas-dev liblapack-dev
          version: 1.0

      - name: Setup system
        run: |
          sudo apt-get install libopenmpi-dev

      - name: Setup json-fortran
        id: setup-json-fortran
        uses: ./.github/actions/setup_json-fortran

      - name: Setup neko
        id: setup-neko
        uses: ./.github/actions/setup_neko
        with:
          json-fortran-dir: ${{ steps.setup-json-fortran.outputs.install-dir }}
          version: develop

  neko-top-tests:
    name: Compile Neko-TOP and run tests
    runs-on: ubuntu-latest
    needs:
      - json-fortran
      - neko
      - pfunit

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get system cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: autotools-dev automake autoconf openmpi-bin pkg-config libopenblas-dev liblapack-dev
          version: 1.0

      - name: Setup system
        run: |
          sudo apt-get install libopenmpi-dev

      - name: Setup json-fortran
        id: setup-json-fortran
        uses: ./.github/actions/setup_json-fortran

      - name: Setup neko
        id: setup-neko
        uses: ./.github/actions/setup_neko
        with:
          json-fortran-dir: ${{ steps.setup-json-fortran.outputs.install-dir }}
          version: develop

      - name: Setup pFUnit
        id: setup-pfunit
        uses: ./.github/actions/setup_pfunit

      - name: Build
        env:
          JSON_FORTRAN_DIR: ${{ steps.setup-json-fortran.outputs.install-dir }}
          NEKO_DIR: ${{ steps.setup-neko.outputs.install-dir }}
          PFUNIT_DIR: ${{ steps.setup-pfunit.outputs.install-dir }}
        run: |
          ./setup.sh --test

      - name: Run tests
        run: |
          ctest --test-dir build --output-on-failure --stop-on-failure
